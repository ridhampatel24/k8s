apiVersion: apps/v1
kind: Deployment 
metadata:
  name: nginx-deploy
  labels:
    app: nginx-prod
    env: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-prod
      env: prod
  template:
    metadata:
      name: nginx-demo
      labels:
        app: nginx-prod
        env: prod
    spec:
      containers:
        - name: write-container
          image: alpine
          command: ["/bin/sh"]
          args: ["-c", "while true; do date >> /var/log/index.html; sleep 10;done"]
          resources:
            limits:
              cpu: "0.1"
              memory: "50Mi"
          volumeMounts:
            - name: shared-data
              mountPath: /var/log
        - name: read-container
          image: nginx:1.23.0
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: "0.2"
              memory: "300Mi"
          volumeMounts:
            - name: shared-data
              mountPath: /usr/share/nginx/html
      volumes:
        - name: shared-data
          emptyDir: {}

#IMP            
# kubectl run nginx --image=nginx --dry-run=client -o yaml
# kubectl create deployment --image=nginx nginx
# kubectl create deployment --image=nginx nginx --dry-run=client -o yaml
# kubectl create deployment --image=nginx nginx --dry-run=client -o yaml > nginx-deployment.yaml
# kubectl create deployment --image=nginx nginx --replicas=4 --dry-run=client -o yaml > nginx-deployment.yaml